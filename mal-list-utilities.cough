{ createJsLinkedList } = require './linked-list'
{ createMalList }      = require './mal-type-utilities'
_createMalList = createMalList
{ empty? }             = require './linked-list'
_empty? = empty?
{ recurse }            = require './linked-list'

car = \malList ->
  jsList = malList.jsValue
  malNode = jsList.value
  return malNode

cdr = \malList ->
  #createMalList (recurse malList)

  jsList = malList.jsValue
  # excise first malNode
  jsTail = jsList.next
  malTail = createMalList jsTail
  return malTail

# TODO: Rewrite so that consumers need not be aware
# of `jsNode`s, just malListNodes.
createMalList = (malValue, malList) ->
  _createMalList (
    createJsLinkedList (
      malValue,
      if ? malList then malList.jsValue else undefined))

empty? = \malList ->
  _empty? malList.jsValue

next = \malList ->
  car (cdr malList)

module.exports = { car, cdr, createMalList, empty?, next }
