{ createMalList } = require './linked-list'
{ malAtomType }   = require './types'
{ malTypes }      = require './types'

create-factory-&-predicate = \malType ->
  factory = \jsValue ->
    createMalValue (jsValue, malType)
  predicate = \malValue ->
    malValue.type == malType
  [factory, predicate]

createMalAtom = \malValue ->
  { malValue, type: malAtomType }

createMalBoolean = \jsBoolean ->
  if jsBoolean then malTrue else malFalse

createMalIgnore = ->
  malIgnore

createMalNil = ->
  malNil

createMalValue = (jsValue, malType) ->
  { jsValue, type: malType }

createPredicate = \constant \value ->
  value == constant

extractJsValue = \malValue ->
  malValue.jsValue

[
  [_createMalBoolean,               malBoolean?              ]
  [createMalCoreEffectfulFunction,  malCoreEffectfulFunction?]
  [createMalCorePureFunction,       malCorePureFunction?     ]
  [createMalIdentifier,             malIdentifier?           ]
  [createMalIndex,                  malIndex?                ]
  [createMalKeyword,                malKeyword?              ]
  [_createMalList,                  malList?                 ]
  [createMalMacro,                  malMacro?                ]
  [createMalNumber,                 malNumber?               ]
  [createMalSpecialForm,            malSpecialForm?          ]
  [createMalString,                 malString?               ]
  [createMalSymbol,                 malSymbol?               ]
  [_createMalUnit,                  _malUnit?                ]
  [createMalUserPureFunction,       malUserPureFunction?     ]
  [_createMalAtom,                  malAtom?                 ]
] = malTypes.map create-factory-&-predicate

malIgnore = _createMalUnit null
malNil = _createMalUnit null

[malFalse, malTrue] = [false, true].map _createMalBoolean

[malFalse?, malIgnore?, malNil?, malTrue?] =
  [malFalse, malIgnore, malNil, malTrue].map createPredicate

module.exports = {
  createMalAtom
  createMalBoolean
  createMalCoreEffectfulFunction
  createMalCorePureFunction
  createMalIdentifier
  createMalIgnore
  createMalIndex
  createMalKeyword
  createMalList
  createMalMacro
  createMalNil
  createMalNumber
  createMalSpecialForm
  createMalString
  createMalSymbol
  createMalUserPureFunction
  extractJsValue
  malAtom?
  malBoolean?
  malCoreEffectfulFunction?
  malCorePureFunction?
  malFalse
  malFalse?
  malIdentifier?   
  malIgnore
  malIgnore?
  malIndex?
  malKeyword?
  malList?
  malMacro?
  malNil
  malNil?
  malNumber?
  malSpecialForm?
  malString?
  malSymbol?
  malTrue
  malTrue?
  malUserPureFunction?
}
