{ createErlList } = require './linked-list'
{ erlAtomType }   = require './types'
{ erlTypes }      = require './types'

create-factory-&-predicate = \erlType ->
  factory = \jsValue ->
    createErlValue (jsValue, erlType)
  predicate = \erlValue ->
    erlValue.type == erlType
  [factory, predicate]

createErlAtom = \erlValue ->
  { erlValue, type: erlAtomType }

createErlBoolean = \jsBoolean ->
  if jsBoolean then erlTrue else erlFalse

createErlIgnore = ->
  erlIgnore

createErlNil = ->
  erlNil

createErlValue = (jsValue, erlType) ->
  { jsValue, type: erlType }

createPredicate = \constant \value ->
  value == constant

extractJsValue = \erlValue ->
  erlValue.jsValue

[
  [_createErlBoolean,               erlBoolean?              ]
  [createErlCoreEffectfulFunction,  erlCoreEffectfulFunction?]
  [createErlCorePureFunction,       erlCorePureFunction?     ]
  [createErlIdentifier,             erlIdentifier?           ]
  [createErlIndex,                  erlIndex?                ]
  [createErlKeyword,                erlKeyword?              ]
  [_createErlList,                  erlList?                 ]
  [createErlMacro,                  erlMacro?                ]
  [createErlNumber,                 erlNumber?               ]
  [createErlSpecialForm,            erlSpecialForm?          ]
  [createErlString,                 erlString?               ]
  [createErlSymbol,                 erlSymbol?               ]
  [_createErlUnit,                  _erlUnit?                ]
  [createErlUserPureFunction,       erlUserPureFunction?     ]
  [_createErlAtom,                  erlAtom?                 ]
] = erlTypes.map create-factory-&-predicate

erlIgnore = _createErlUnit null
erlNil = _createErlUnit null

[erlFalse, erlTrue] = [false, true].map _createErlBoolean

[erlFalse?, erlIgnore?, erlNil?, erlTrue?] =
  [erlFalse, erlIgnore, erlNil, erlTrue].map createPredicate

module.exports = {
  createErlAtom
  createErlBoolean
  createErlCoreEffectfulFunction
  createErlCorePureFunction
  createErlIdentifier
  createErlIgnore
  createErlIndex
  createErlKeyword
  createErlList
  createErlMacro
  createErlNil
  createErlNumber
  createErlSpecialForm
  createErlString
  createErlSymbol
  createErlUserPureFunction
  extractJsValue
  erlAtom?
  erlBoolean?
  erlCoreEffectfulFunction?
  erlCorePureFunction?
  erlFalse
  erlFalse?
  erlIdentifier?   
  erlIgnore
  erlIgnore?
  erlIndex?
  erlKeyword?
  erlList?
  erlMacro?
  erlNil
  erlNil?
  erlNumber?
  erlSpecialForm?
  erlString?
  erlSymbol?
  erlTrue
  erlTrue?
  erlUserPureFunction?
}
